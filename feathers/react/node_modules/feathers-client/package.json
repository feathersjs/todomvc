{
  "name": "feathers-client",
  "description": "Feathers service clients for REST (jQuery, Request, Superagent) and Websocket (Socket.io, Primus) connections",
  "version": "0.2.0",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/feathersjs/feathers-client.git"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/feathersjs/feathers-client/issues"
  },
  "homepage": "https://github.com/feathersjs/feathers-client",
  "keywords": [
    "feathers",
    "feathers-plugin",
    "batch",
    "rest",
    "api"
  ],
  "author": {
    "name": "David Luecke",
    "email": "daff@neyeon.com",
    "url": "https://feathersjs.com"
  },
  "contributors": [],
  "engines": {
    "node": ">=0.10.0"
  },
  "main": "lib/client.js",
  "scripts": {
    "build": "rm -rf dist/ && mkdir -p dist && browserify lib/client.js --standalone feathers --outfile dist/feathers.js",
    "add-dist": "npm run build && git add dist/ --force && git commit -am \"Updating dist\"",
    "publish": "git push origin && git push origin --tags",
    "release:patch": "npm run add-dist && npm version patch && npm publish",
    "release:minor": "npm run add-dist && npm version minor && npm publish",
    "release:major": "npm run add-dist && npm version major && npm publish",
    "jshint": "jshint lib/. test/. --config",
    "mocha": "mocha test/ --recursive --timeout 5000",
    "test": "npm run jshint && npm run mocha"
  },
  "directories": {
    "lib": "lib"
  },
  "dependencies": {
    "events": "^1.0.2",
    "querystring": "^0.2.0",
    "uberproto": "^1.1.2"
  },
  "devDependencies": {
    "jsdom": "^3.1.2",
    "body-parser": "^1.12.4",
    "browserify": "^10.2.3",
    "feathers": "^1.1.0-pre.0",
    "feathers-memory": "^0.3.4",
    "jquery": "^2.1.4",
    "jshint": "^2.6.3",
    "mocha": "^2.1.0",
    "request": "^2.56.0",
    "socket.io-client": "^1.3.5",
    "superagent": "^1.2.0",
    "ws": "^0.7.2"
  },
  "readme": "# feathers-client\n\n[![Build Status](https://travis-ci.org/feathersjs/feathers-client.png?branch=master)](https://travis-ci.org/feathersjs/feathers-client)\n\n> A client for Feathers services supporting many different transport libraries.\n\n## About\n\n`feathers-client` is a small module that lets you use remote Feathers services relying on any of the following libraries:\n\n- REST API\n  - [jQuery](https://jquery.com/)\n  - [Superagent](http://visionmedia.github.io/superagent/)\n  - [request](https://github.com/request/request)\n- Websockets (with real-time updates)\n  - [Socket.io](http://socket.io/)\n  - [Primus](https://github.com/primus/primus)\n\n## Usage\n\n`feathers-client` is used much the same way as you would use Feathers on the server making it seamless to use in other NodeJS applications or in the browser. With NodeJS or Browserify:\n\n> npm install feathers-client\n\n```js\nvar feathers = require('feathers-client');\n```\n\nThe `dist/feathers.js` file also provides a UMD version that works with most module loaders or standalone (providing a `feathers` global name).\n\n```html\n<script type=\"text/javascript\" src=\"node_modules/feathers-client/dist/feathers.js\"></script>\n```\n\n```js\nvar app = feathers('http://todos.feathersjs.com')\n  .configure(feathers.socketio());\n\nvar todoService = app.service('todos');\n\ntodoService.on('created', function(todo) {\n  console.log('Todo created', todo);\n});\n\ntodoService.create({\n  text: 'A todo',\n  complete: false\n}, function(error, todo) {\n  console.log('Success');\n});\n\ntodoService.find(function(error, todos) {\n  console.log('Got the following Todos', todos);\n});\n```\n\n## REST\n\nConnecting to a Feathers service via the REST API is possible using [jQuery](https://jquery.com/), [request](https://github.com/request/request) or [Superagent](http://visionmedia.github.io/superagent/):\n\n__Important__: REST client services do emit `created`, `updated`, `patched` and `removed` events but only _locally for their own instance_. Real-time events from other clients can only be received by using a websocket connection.\n\n### jQuery\n\njQuery [$.ajax](http://api.jquery.com/jquery.ajax/) needs the API base URL and an instance of jQuery passed to `feathers.jquery`. If no jQuery instance is passed the global `jQuery` will be used.\n\n```js\nvar app = feathers('http://todos.feathersjs.com')\n  .configure(feathers.jquery());\n```\n\n### Request\n\nThe [request](https://github.com/request/request) object needs to be passed explicitly to `feathers.request`. Using [request.defaults](https://github.com/request/request#convenience-methods) - which creates a new request object - is a great way to set things like default headers or authentication information:\n\n```js\nvar request = require('request');\nvar client = request.defaults({\n  'auth': {\n    'user': 'username',\n    'pass': 'password',\n    'sendImmediately': false\n  }\n});\n\nvar app = feathers('http://todos.feathersjs.com')\n  .configure(feathers.request(client));\n```\n\n### Superagent\n\n[Superagent](http://visionmedia.github.io/superagent/) currently works with a default configuration:\n\n```js\nvar superagent = require('superagent');\nvar app = feathers('http://todos.feathersjs.com')\n  .configure(feathers.superagent(superagent));\n```\n\n## Websockets\n\nWebsocket real-time connections can be established via [Socket.io](http://socket.io/) or [Primus](https://github.com/primus/primus). Websocket services emit all events that they receive allowing you to implement real-time functionality.\n\n### Socket.io\n\n#### In the browser\n\nProvide either a connected socket or the URL of the websocket endpoint:\n\n```js\nvar socket = io('http://todos.feathersjs.com');\nvar app = feathers('http://todos.feathersjs.com')\n  .configure(feathers.socketio(socket))\n  // or\n  .configure(feathers.socketio('http://todos.feathersjs.com'))\n```\n\n#### Between NodeJS applications\n\nWebsocket connections are also very efficient for real-time communication between different NodeJS servers. First install `socket.io-client`:\n\n> npm install socket.io-client\n\nThen pass the connection just like in the browser:\n\n```js\nvar io = require('socket.io-client');\nvar socket = io('http://todos.feathersjs.com');\nvar app = feathers('http://todos.feathersjs.com')\n  .configure(feathers.socketio(socket));\n```\n\n### Primus\n\n[Primus](https://github.com/primus/primus) works similar to Socket.io:\n\n```html\n<script type=\"text/javascript\" src=\"node_modules/feathers-client/dist/feathers.js\"></script>\n<script type=\"text/javascript\" src=\"primus/primus.js\"></script>\n<script type=\"text/javascript\">\n  var primus = new Primus('http://todos.feathersjs.com');\n  var app = feathers('http://todos.feathersjs.com')\n    .configure(feathers.primus(primus));\n</script>\n```\n\n## Changelog\n\n__0.1.0__\n\n- Initial release\n\n## Author\n\n- [David Luecke](https://github.com/daffl)\n\n## License\n\nCopyright (c) 2015 David Luecke\n\nLicensed under the [MIT license](LICENSE).\n",
  "readmeFilename": "README.md",
  "gitHead": "2934572de2652aababc03f2697c8f82465e5ec53",
  "_id": "feathers-client@0.2.0",
  "_shasum": "4461df37d371b07cbb4cce98e102fc41ad1299c5",
  "_from": "feathers-client@*"
}
